[{"C:\\Users\\EVYATAR YAGONI\\Desktop\\react-player\\src\\index.js":"1","C:\\Users\\EVYATAR YAGONI\\Desktop\\react-player\\src\\reportWebVitals.js":"2","C:\\Users\\EVYATAR YAGONI\\Desktop\\react-player\\src\\App.js":"3","C:\\Users\\EVYATAR YAGONI\\Desktop\\react-player\\src\\components\\Player.js":"4","C:\\Users\\EVYATAR YAGONI\\Desktop\\react-player\\src\\components\\Song.js":"5","C:\\Users\\EVYATAR YAGONI\\Desktop\\react-player\\src\\components\\Library.js":"6","C:\\Users\\EVYATAR YAGONI\\Desktop\\react-player\\src\\components\\LibrarySong.js":"7","C:\\Users\\EVYATAR YAGONI\\Desktop\\react-player\\src\\components\\Nav.js":"8","C:\\Users\\EVYATAR YAGONI\\Desktop\\react-player\\src\\data.js":"9"},{"size":478,"mtime":1608592274494,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":1970,"mtime":1608676969132,"results":"13","hashOfConfig":"11"},{"size":3254,"mtime":1608676961874,"results":"14","hashOfConfig":"11"},{"size":375,"mtime":1608650898960,"results":"15","hashOfConfig":"11"},{"size":754,"mtime":1608660301213,"results":"16","hashOfConfig":"11"},{"size":1368,"mtime":1608671813336,"results":"17","hashOfConfig":"11"},{"size":440,"mtime":1608660076593,"results":"18","hashOfConfig":"11"},{"size":3321,"mtime":1608676360650,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"wmhw5m",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\EVYATAR YAGONI\\Desktop\\react-player\\src\\index.js",[],["41","42"],"C:\\Users\\EVYATAR YAGONI\\Desktop\\react-player\\src\\reportWebVitals.js",[],"C:\\Users\\EVYATAR YAGONI\\Desktop\\react-player\\src\\App.js",[],"C:\\Users\\EVYATAR YAGONI\\Desktop\\react-player\\src\\components\\Player.js",[],"C:\\Users\\EVYATAR YAGONI\\Desktop\\react-player\\src\\components\\Song.js",[],"C:\\Users\\EVYATAR YAGONI\\Desktop\\react-player\\src\\components\\Library.js",["43"],"import Raect from \"react\";\r\nimport LibrarySong from \"./LibrarySong\";\r\n\r\nconst Library = ({\r\n  songs,\r\n  setCurrentSong,\r\n  audioRef,\r\n  isPlaying,\r\n  setSongs,\r\n  libraryOpen,\r\n}) => {\r\n  return (\r\n    <div className={`library ${libraryOpen ? \"active-library\" : \"\"}`}>\r\n      <h2 className=\"libary-name\">Library</h2>\r\n      <div className=\"library-songs\">\r\n        {songs.map((song) => (\r\n          <LibrarySong\r\n            song={song}\r\n            setCurrentSong={setCurrentSong}\r\n            key={song.id}\r\n            songs={songs}\r\n            audioRef={audioRef}\r\n            isPlaying={isPlaying}\r\n            id={song.id}\r\n            setSongs={setSongs}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Library;\r\n","C:\\Users\\EVYATAR YAGONI\\Desktop\\react-player\\src\\components\\LibrarySong.js",["44"],"import { faPause } from \"@fortawesome/free-solid-svg-icons\";\r\nimport React from \"react\";\r\n\r\nconst LibrarySong = ({\r\n  song,\r\n  setCurrentSong,\r\n  songs,\r\n  audioRef,\r\n  isPlaying,\r\n  id,\r\n  setSongs,\r\n}) => {\r\n  const songSelectHandler = async () => {\r\n    await setCurrentSong(song);\r\n\r\n    //Add Active State\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...song,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n\r\n    if (isPlaying) audioRef.current.play();\r\n\r\n    setSongs(newSongs);\r\n    //Check if the somg is palying\r\n    if (isPlaying) {\r\n      const playPromise = audioRef.current.play();\r\n      if (playPromise !== undefined) {\r\n        playPromise.then((audio) => {\r\n          audioRef.current.play();\r\n        });\r\n      }\r\n    }\r\n    // audioRef.current.play();\r\n  };\r\n\r\n  return (\r\n    <div\r\n      onClick={songSelectHandler}\r\n      className={`library-song ${song.active ? \"selected\" : \"\"}`}\r\n    >\r\n      <img alt={song.name} src={song.cover}></img>\r\n      <div className=\"song-description\">\r\n        <h3 className=\"library-songs__song-name\">{song.name}</h3>\r\n        <h4 className=\"library-songs__song-arist\">{song.artist}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LibrarySong;\r\n","C:\\Users\\EVYATAR YAGONI\\Desktop\\react-player\\src\\components\\Nav.js",[],"C:\\Users\\EVYATAR YAGONI\\Desktop\\react-player\\src\\data.js",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":1,"column":8,"nodeType":"51","messageId":"52","endLine":1,"endColumn":13},{"ruleId":"49","severity":1,"message":"53","line":1,"column":10,"nodeType":"51","messageId":"52","endLine":1,"endColumn":17},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'Raect' is defined but never used.","Identifier","unusedVar","'faPause' is defined but never used.","no-global-assign","no-unsafe-negation"]